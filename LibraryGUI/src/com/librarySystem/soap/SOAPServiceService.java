
package com.librarySystem.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import com.librarySystem.constant.*;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */

//@WebServiceClient(name = "SOAPServiceService", targetNamespace = "http://soap.librarySystem.com/", wsdlLocation = "file:/D:/Distributed-Systems/Library-System/Distributed-Systems/ConcordiaLibraryServer/src/SOAPServiceService.wsdl")


@WebServiceClient(name = "SOAPServiceService", targetNamespace = "http://soap.librarySystem.com/", wsdlLocation = "http://localhost:9911/ws/LibraryService?wsdl")
public class SOAPServiceService
    extends Service
{

    private URL SOAPSERVICESERVICE_WSDL_LOCATION=null;
    private WebServiceException SOAPSERVICESERVICE_EXCEPTION=new WebServiceException();
    private final static QName SOAPSERVICESERVICE_QNAME = new QName("http://soap.librarySystem.com/", "SOAPServiceService");
  
   /* static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/D:/Distributed-Systems/Library-System/Distributed-Systems/ConcordiaLibraryServer/src/SOAPServiceService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SOAPSERVICESERVICE_WSDL_LOCATION = url;
        SOAPSERVICESERVICE_EXCEPTION = e;
    }*/
   
    public SOAPServiceService(URL url, WebServiceException e){
    	super(url, SOAPSERVICESERVICE_QNAME); 
    	 this.SOAPSERVICESERVICE_WSDL_LOCATION = url;
         this.SOAPSERVICESERVICE_EXCEPTION = e;
       
    }
  
    public SOAPServiceService() {
        super(__getWsdlLocation(), SOAPSERVICESERVICE_QNAME);
    }

    public SOAPServiceService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SOAPSERVICESERVICE_QNAME, features);
    }

    public SOAPServiceService(URL wsdlLocation) {
        super(wsdlLocation, SOAPSERVICESERVICE_QNAME);
    }

    public SOAPServiceService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SOAPSERVICESERVICE_QNAME, features);
    }

    public SOAPServiceService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SOAPServiceService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SOAPService
     */
    @WebEndpoint(name = "SOAPServicePort")
    public SOAPService getSOAPServicePort() {
        return super.getPort(new QName("http://soap.librarySystem.com/", "SOAPServicePort"), SOAPService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SOAPService
     */
    @WebEndpoint(name = "SOAPServicePort")
    public SOAPService getSOAPServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://soap.librarySystem.com/", "SOAPServicePort"), SOAPService.class, features);
    }

    private static URL __getWsdlLocation() {
    	 URL url = null;
         WebServiceException e = null;
         try {
             url = new URL("http://"+Constants.HOSTANAME+":"+University.CONCORDIA.getSoapPort()+"/ws/LibraryService?wsdl");
         return url;
         } catch (MalformedURLException ex) {
             e = new WebServiceException(ex);
             throw e;
         }
    }
}
